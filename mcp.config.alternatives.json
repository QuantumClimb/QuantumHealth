{
  "comment": "Alternative MCP configurations for testing different Vercel MCP packages",
  "alternatives": {
    "option1_official_vercel": {
      "vercel": {
        "command": "npx",
        "args": [
          "-y",
          "@vercel/mcp-server@latest",
          "--access-token",
          "$VERCEL_ACCESS_TOKEN"
        ]
      }
    },
    "option2_modelcontextprotocol": {
      "vercel": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-vercel@latest",
          "--access-token",
          "$VERCEL_ACCESS_TOKEN"
        ]
      }
    },
    "option3_generic": {
      "vercel": {
        "command": "npx",
        "args": [
          "-y",
          "vercel-mcp-server@latest",
          "--access-token",
          "$VERCEL_ACCESS_TOKEN"
        ]
      }
    },
    "option4_current": {
      "vercel": {
        "command": "npx",
        "args": [
          "-y",
          "@cursor/mcp-server-vercel@latest",
          "--access-token",
          "$VERCEL_ACCESS_TOKEN"
        ]
      }
    }
  },
  "testing_instructions": {
    "1": "Run 'node test-mcp-vercel.js' to test current configuration",
    "2": "If current fails, try replacing the vercel section in mcp.config.secure.json with option1, option2, or option3",
    "3": "Test each option until you find the working package name",
    "4": "Based on MCP SDK patterns, option1 (@vercel/mcp-server) is most likely to be correct"
  },
  "verification_commands": [
    "npm view @vercel/mcp-server",
    "npm view @modelcontextprotocol/server-vercel", 
    "npm view vercel-mcp-server",
    "npm view @cursor/mcp-server-vercel"
  ]
} 